---------------------------------------------------------------------------

 Copyright (c) PC2Lab Development Team
 All rights reserved.

 This file is part of free(dom) software -- you can redistribute it
 and/or modify it under the terms of the GNU General Public
 License (GPL)as published by the Free Software Foundation, either
 version 3 (GPL v3), or (at your option) a later version.

 The software is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

 Miami University and PC2Lab makes no representations or warranties
 about the suitability of the software, either express or implied,
 including but not limited to the implied warranties of
 merchantability, fitness for a particular purpose, or
 non-infringement.  Miami University and PC2Lab is not be liable for
 any damages suffered by licensee as a result of using, result of
 using, modifying or distributing this software or its derivatives.

 By using or copying this Software, Licensee agrees to abide by the
 intellectual property laws, and all other applicable laws of the
 U.S., and the terms of this license.

 Authors: Dhananjai M. Rao       raodm@miamiOH.edu

---------------------------------------------------------------------------

This directory has two key programs

Model Generator (modelgen):

This program is run in the following manner to generate a model.  This
program uses the following information to generate the model:

   * Boundaries for the area of interest supplied as GIS shape files
   * Gridded population data supplied as a GDAL file.
   * An OSM XML file with nodes, ways, and buildings.
   * An optional model adjustment file.
   
Path Finder (pathfinder):

A conspicous update that now adds functionality to determine route
between two given buildings. The path finder class currently runs as a
standalone program that can:

    * Load the model generated by model generator
    * Compute the path between two buildings using Dikstra's algorithm
    * Routes can either be shortest distance or shortest time
    * (i.e. fastest route).
    * The tool can draw routes in xfig text format


