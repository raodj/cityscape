#ifndef SCHEDULE_ENTRY_H
#define SCHEDULE_ENTRY_H

//---------------------------------------------------------------------------
//
// Copyright (c) PC2Lab Development Team
// All rights reserved.
//
// This file is part of free(dom) software -- you can redistribute it
// and/or modify it under the terms of the GNU General Public
// License (GPL)as published by the Free Software Foundation, either
// version 3 (GPL v3), or (at your option) a later version.
//
// The software is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
// Miami University and PC2Lab makes no representations or warranties
// about the suitability of the software, either express or implied,
// including but not limited to the implied warranties of
// merchantability, fitness for a particular purpose, or
// non-infringement.  Miami University and PC2Lab is not be liable for
// any damages suffered by licensee as a result of using, result of
// using, modifying or distributing this software or its derivatives.
//
// By using or copying this Software, Licensee agrees to abide by the
// intellectual property laws, and all other applicable laws of the
// U.S., and the terms of this license.
//
// Authors: Dhananjai M. Rao       raodm@miamiOH.edu
//
//---------------------------------------------------------------------------

#include <string>

/**
 * This is a simple class that is used to encapsulate the daily
 * schedule for a person. There can be millions of people in a model.
 * Consequently, we need a rather compact representation for the
 * schedules associated with each person.  Here are a few examples of
 * schedlues:
 *
 * # Person going to work 5-week days at 8 am (28800 seconds) and
 * # working in a building with buildingID 4752356
 * 1 5 28800 4752356\n
 */
class ScheduleEntry {
public:
    /**
       A workhorse constructor that by default initializes all the
       instance variables to invalid values.
    */
    ScheduleEntry(const short dowStart = -1, const short dowEnd = -1,
                  const int time = -1, const long destBldId = -1) :
        dowStart(dowStart), dowEnd(dowEnd), time(time), destBldId(destBldId) {}
    
    /** The starting Day of Week (dow) for this schedule, with
        0=sunday, 1=monday, ..., 5=friday, 6=saturday, and -1 as
        unspecified.
    */
    short dowStart : 4;
    
    /** The ending Day of Week (dow) for this schedule, with
        0=sunday, 1=monday, ..., 5=friday, 6=saturday, and -1 as
        unspecified.
    */
    short dowEnd : 4;    
    
    /** Number of seconds after midnight on a given day when this
        schedule should be fired.  For example 
    */
    int time;
    
    /** The destination building where this person should go to at the
        specified day and time.
    */
    long destBldId;

    /**
       Returns the string representation of this schedule entry.
     */
    std::string to_string() const;

    /** Converts a string representation of a schedule (generated by
        ScheduleEntry::to_string()) to an object.

        \param[in] schedEntry The schedule entry to be parsed into a
        schedule object.

        \return The schedule entry object parsed from the given
        schedule entry.
    */
    static ScheduleEntry parse(const std::string& schedEntry);

    /** Converts a string representation of a schedule (generated by
        ScheduleEntry::to_string()) to an object.

        \param[in] is The input stream from where the schedule entry
        data should be read into a schedule object.

        \return The schedule entry object read from the given
        input stream
    */
    static ScheduleEntry parse(std::istream& is);
    
};


#endif
